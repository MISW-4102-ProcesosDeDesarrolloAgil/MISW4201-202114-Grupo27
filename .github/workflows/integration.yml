name: Continuous_Integration

# Controls when the workflow will run
on:
  # Triggers the workflow on push Lonic-xx branch
  push:
    branches: development

  pull_request:
    branches: development
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  # This workflow contains a single job called "build"
  backend:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Install python, pip and backend
        run: |
          cd flaskr
          sudo apt install python-pytest
          sudo pip install -r requirements.txt
      - name: Test with unittest
        run: |
            cd flaskr
            python2 -m unittest
      - name: Run app
        run: |
          cd flaskr
          flask run &
          
  frontend:
    needs: backend
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Install frontend angular
        run: |
          cd front-end/tutorial-canciones
          sudo apt install -y nodejs
          sudo npm install npm@latest -g
          sudo npm install -g @angular/cli
          sudo npm install @angular-devkit/architect
          sudo npm install
      - name: Test with unittest
        run: |
         cd front-end/tutorial-canciones 
         ng test --watch=false --browsers ChromeHeadless
      - name: Run App
        run: |
          cd front-end/tutorial-canciones
          ng serve &
          
  Deploy_Dev_Back:
    needs: frontend  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy Nginx to serve angular to Heroku
        uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          heroku_api_key: "69a2cd61-e881-4f88-a812-de98c849c5a5"
          heroku_app_name: "back-dev-lonic-27"
          heroku_email: "jl.lopez77@uniandes.edu.co"
          usedocker: true
          appdir: flaskr

  Deploy_Dev_Front:
    needs: Deploy_Dev_Back
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy Nginx to serve angular to Heroku
        uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          heroku_api_key: "69a2cd61-e881-4f88-a812-de98c849c5a5"
          heroku_app_name: "front-dev-lonic-27"
          heroku_email: "jl.lopez77@uniandes.edu.co"
          usedocker: true
          appdir: front-end/tutorial-canciones
          docker_build_args: |
            ENV_TYPE
        env:
          ENV_TYPE: development
